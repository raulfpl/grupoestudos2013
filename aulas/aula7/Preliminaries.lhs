Eu não quero que isso apareça !
================================

> module Preliminaries where

> header :: [String]
> header = ["section .data", 
>           "msg1 : db 0xA,'resultado: ',0xA",
>           "strLen : equ $-msg1",
>           "msg2 : db '------ end of program ----- ',0xA", 
>           "strLen2 : equ $-msg2",
>           "",
>           "segment .bss",
>           "outstr: resb 11",
>           "outlen: resd 1",
>           "inicio: resd 1",
>           "",
>           "section .text",
>           "global _start",
>           "_start:"]

> suffix :: [String]
> suffix = ["; Incializa a string de saída",
>           "mov ebx, outstr",
>           "add ebx, 10",
>           "mov [ebx], BYTE 10  ; \n ",
>           "dec ebx",
>           "",
>           "mov ecx, 10",
>           "",
>           "; Converte um inteiro em string",
>           "intToStr:",
>           "dec ebx",
>           "mov edx,0",
>           "idiv ecx",
>           "add dl, 48",
>           "mov [ebx], dl;",
>           "cmp eax,0",
>           "jnz intToStr",
>           "",
>           "; Cáclula o início do número e seu comprimento na string de saída.",
>           "mov [inicio], ebx",
>           "mov eax, outstr",
>           "add eax, 10",
>           "sub eax, ebx", 
>           "mov [outlen],eax",
>           "",
>           ";Iprime resultado e termina o programa de modo apropriado",
>           "mov eax, 4        ; 4 Código para operação de escrita",
>           "mov ebx, 1        ; Hanlder de escrita (1 = stdout)",
>           "mov ecx, msg1     ; Endereço da variável de leitura",
>           "mov edx, strLen   ; Comprimento da saída",
>           "int 0x80          ; Chamada ao kernel",
>           "",
>           "mov eax, 4",
>           "mov ebx, 1",
>           "mov ecx, outstr",
>           "mov edx, 11",
>           "int 0x80",
>           "",
>           "mov eax, 4",
>           "mov ebx, 1", 
>           "mov ecx, msg2",
>           "mov edx, strLen2",
>           "int 0x80",
>           "",
>           "mov     ebx, 0       ; Status de término do programa 0 = OK",
>           "mov     eax, 1       ; Código de chamara 1 = EXIT",
>           "int     0x80         ; chamada ao kernel"]
